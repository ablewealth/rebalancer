// =========================================================================
            // --- 4. GEMINI API INTEGRATION ---
            // =========================================================================

            async function callGemini(prompt, retries = 3, delay = 1000) {
                appState.ui.isLoading = true;
                renderAll(); 
                const apiKey = ""; 
                const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;
                const payload = { contents: [{ role: "user", parts: [{ text: prompt }] }], generationConfig: { temperature: 0.5, topK: 1, topP: 1, maxOutputTokens: 2048 }};
                try {
                    const response = await fetch(apiUrl, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });
                    if (!response.ok) {
                        if (response.status === 429 && retries > 0) { await new Promise(res => setTimeout(res, delay)); return callGemini(prompt, retries - 1, delay * 2); }
                        throw new Error(`API error: ${response.status} ${response.statusText}`);
                    }
                    const result = await response.json();
                    if (result.candidates?.[0]?.content?.parts?.[0]?.text) return result.candidates[0].content.parts[0].text;
                    else throw new Error('Invalid response structure from Gemini API');
                } catch (error) {
                    console.error("Gemini API call failed:", error);
                    showNotification("AI generation failed. Please try again.", "error");
                    return null;
                } finally {
                    appState.ui.isLoading = false;
                    renderAll();
                }
            }
